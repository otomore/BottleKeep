name: React Native セットアップ（Windows対応）

on:
  workflow_dispatch:
    inputs:
      setup_type:
        description: 'セットアップタイプ'
        required: true
        default: 'expo'
        type: choice
        options:
        - expo
        - react-native-cli

jobs:
  setup-react-native:
    runs-on: ubuntu-latest

    steps:
      - name: リポジトリをチェックアウト
        uses: actions/checkout@v4

      - name: Node.js セットアップ
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Expo CLI セットアップ
        if: github.event.inputs.setup_type == 'expo'
        run: |
          npm install -g @expo/cli

      - name: React Native プロジェクト作成
        if: github.event.inputs.setup_type == 'expo'
        run: |
          npx create-expo-app BottleKeeperRN --template blank-typescript

      - name: 必要な依存関係を追加
        working-directory: ./BottleKeeperRN
        run: |
          # ナビゲーション
          npm install @react-navigation/native @react-navigation/stack @react-navigation/bottom-tabs

          # UI コンポーネント
          npm install react-native-elements react-native-paper

          # ストレージ
          npm install @react-native-async-storage/async-storage

          # カメラ・画像
          expo install expo-camera expo-image-picker

          # SQLite
          expo install expo-sqlite

          # バーコードスキャン
          expo install expo-barcode-scanner

      - name: 基本的なコンポーネント構造を作成
        working-directory: ./BottleKeeperRN
        run: |
          mkdir -p src/{components,screens,services,types}

          # 基本的なBottleタイプを作成
          cat > src/types/Bottle.ts << 'EOF'
          export interface Bottle {
            id: string;
            name: string;
            distillery: string;
            age?: number;
            abv: number;
            category: string;
            price?: number;
            purchaseDate?: Date;
            openDate?: Date;
            rating?: number;
            notes?: string;
            photos: string[];
          }
          EOF

          # 基本的なBottleListScreenを作成
          cat > src/screens/BottleListScreen.tsx << 'EOF'
          import React from 'react';
          import { View, Text, FlatList, StyleSheet } from 'react-native';
          import { Bottle } from '../types/Bottle';

          export default function BottleListScreen() {
            const [bottles, setBottles] = React.useState<Bottle[]>([]);

            return (
              <View style={styles.container}>
                <Text style={styles.title}>BottleKeeper - ウイスキーコレクション</Text>
                <FlatList
                  data={bottles}
                  keyExtractor={(item) => item.id}
                  renderItem={({ item }) => (
                    <View style={styles.bottleItem}>
                      <Text style={styles.bottleName}>{item.name}</Text>
                      <Text>{item.distillery}</Text>
                    </View>
                  )}
                />
              </View>
            );
          }

          const styles = StyleSheet.create({
            container: {
              flex: 1,
              padding: 16,
              backgroundColor: '#fff',
            },
            title: {
              fontSize: 24,
              fontWeight: 'bold',
              marginBottom: 16,
            },
            bottleItem: {
              padding: 12,
              borderBottomWidth: 1,
              borderBottomColor: '#eee',
            },
            bottleName: {
              fontSize: 18,
              fontWeight: '600',
            },
          });
          EOF

      - name: プロジェクトファイルをアップロード
        uses: actions/upload-artifact@v3
        with:
          name: bottlekeep-react-native
          path: ./BottleKeeperRN

      - name: Windows開発手順を出力
        run: |
          cat << 'EOF'
          =================================
          Windows環境でのReact Native開発手順
          =================================

          1. Node.js をインストール
             https://nodejs.org/

          2. Expo CLI をインストール
             npm install -g @expo/cli

          3. 作成されたプロジェクトをダウンロードして展開

          4. 依存関係をインストール
             cd BottleKeeperRN
             npm install

          5. 開発サーバーを起動
             npx expo start

          6. Expo Go アプリでQRコードをスキャンしてテスト

          7. iOSビルド（EAS Build使用）
             npm install -g @expo/eas-cli
             eas login
             eas build --platform ios

          注意: iOS用ビルドにはApple Developer Program登録が必要です
          EOF